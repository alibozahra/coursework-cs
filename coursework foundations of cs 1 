import math
import time

def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

def mod_inv(a, m):
    m0, x0, x1 = m, 0, 1
    while a > 1:
        q = a // m
        m, a = a % m, m
        x0, x1 = x1 - q * x0, x0
    return x1 + m0 if x1 < 0 else x1

def factor_modulus(N, e):
    start_time = time.time()
    for k in range(2, int(math.sqrt(N)) + 1):
        if N % k == 0:
            p, q = k, N // k
            phi = (p - 1) * (q - 1)
            if gcd(e, phi) == 1:
                d = mod_inv(e, phi)
                end_time = time.time()
                runtime = end_time - start_time
                return p, q, d, runtime
    return None, None, None, None 

def calculate_runtime(N, e):
    p, q, d, runtime = factor_modulus(N, e)
    if p is not None and q is not None and d is not None and runtime is not None:
        return p, q, d, runtime
    else:
        return None, None, None, None

